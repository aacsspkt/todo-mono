/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Todos, TodosInterface } from "../Todos";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "task",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "TaskCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "TaskDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "task",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "TaskToggleCompleted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_task",
        type: "string",
      },
    ],
    name: "addTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deleteTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getTask",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "task",
            type: "string",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
        ],
        internalType: "struct Todos.Task",
        name: "task",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTasks",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "task",
            type: "string",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
        ],
        internalType: "struct Todos.Task[]",
        name: "result",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "toggleCompleted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bfb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806304a87e381461005c5780631d65e77e1461007a578063455f50241461009a578063560f3192146100af57806367238562146100c2575b600080fd5b6100646100d5565b60405161007191906106e5565b60405180910390f35b61008d610088366004610747565b6101de565b6040516100719190610760565b6100ad6100a8366004610747565b610343565b005b6100ad6100bd366004610747565b6103f5565b6100ad6100d036600461077a565b610537565b33600090815260208181526040808320805482518185028101850190935280835260609492939192909184015b828210156101d55783829060005260206000209060020201604051806040016040529081600082018054610135906107ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610161906107ec565b80156101ae5780601f10610183576101008083540402835291602001916101ae565b820191906000526020600020905b81548152906001019060200180831161019157829003601f168201915b505050918352505060019182015460ff161515602091820152918352929092019101610102565b50505050905090565b6040805180820190915260608152600060208201523360008181526020818152604080832080548251818502810185019093528083529192909190849084015b828210156102f15783829060005260206000209060020201604051806040016040529081600082018054610251906107ec565b80601f016020809104026020016040519081016040528092919081815260200182805461027d906107ec565b80156102ca5780601f1061029f576101008083540402835291602001916102ca565b820191906000526020600020905b8154815290600101906020018083116102ad57829003601f168201915b505050918352505060019182015460ff16151560209182015291835292909201910161021e565b505050509050805184106103205760405162461bcd60e51b815260040161031790610826565b60405180910390fd5b80848151811061033257610332610852565b602002602001015192505050919050565b336000818152602081905260409020805483106103725760405162461bcd60e51b815260040161031790610826565b600081848154811061038657610386610852565b6000918252602090912060029091020160018101805460ff8082161560ff1990921682179092556040519293507f9f2107acfa26983c806661b20b32ff10d456649f2c9a042efe5f4b57bdc4cb95926103e792889286929116908890610868565b60405180910390a150505050565b336000818152602081905260409020805483106104245760405162461bcd60e51b815260040161031790610826565b825b815461043490600190610930565b8110156104c05781610447826001610949565b8154811061045757610457610852565b906000526020600020906002020182828154811061047757610477610852565b600091825260209091206002909102018061049283826109c1565b506001918201549101805460ff191660ff9092161515919091179055806104b881610aa2565b915050610426565b50808054806104d1576104d1610abb565b600082815260208120600019909201916002830201906104f1828261061e565b50600101805460ff1916905590556040518381527fd078b251d950cc55c44340be1db732337ef4939a76e1367ee271ad2cb19c46af9060200160405180910390a1505050565b6040805160606020601f85018190040282018101835291810183815233926000929182918790879081908501838280828437600092018290525093855250505060209182018190526001600160a01b038516815280825260408120805460018101825590825291902082519293509091839160028402019081906105bb9082610ad1565b50602091820151600191909101805460ff19169115159190911790558251908301516040517fa31a815e4d8d7c7af5700d02c3c156b3a6682908db1a38865de7b8a0c6f12a849261060f9285928890610b8b565b60405180910390a15050505050565b50805461062a906107ec565b6000825580601f1061063a575050565b601f016020900490600052602060002090810190610658919061065b565b50565b5b80821115610670576000815560010161065c565b5090565b6000815180845260005b8181101561069a5760208185018101518683018201520161067e565b506000602082860101526020601f19601f83011685010191505092915050565b60008151604084526106cf6040850182610674565b6020938401511515949093019390935250919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561073a57603f198886030184526107288583516106ba565b9450928501929085019060010161070c565b5092979650505050505050565b60006020828403121561075957600080fd5b5035919050565b60208152600061077360208301846106ba565b9392505050565b6000806020838503121561078d57600080fd5b823567ffffffffffffffff808211156107a557600080fd5b818501915085601f8301126107b957600080fd5b8135818111156107c857600080fd5b8660208285010111156107da57600080fd5b60209290920196919550909350505050565b600181811c9082168061080057607f821691505b60208210810361082057634e487b7160e01b600052602260045260246000fd5b50919050565b602080825260129082015271125b99195e081bdd5d081bd988189bdd5b9960721b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b8481526000602060808184015260008654610882816107ec565b80608087015260a06001808416600081146108a457600181146108be576108ec565b60ff1985168984015283151560051b8901830195506108ec565b8b6000528660002060005b858110156108e45781548b82018601529083019088016108c9565b8a0184019650505b5050505086151560408601525091506109029050565b6001600160a01b038316606083015295945050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156109435761094361091a565b92915050565b808201808211156109435761094361091a565b634e487b7160e01b600052604160045260246000fd5b601f8211156109bc57600081815260208120601f850160051c810160208610156109995750805b601f850160051c820191505b818110156109b8578281556001016109a5565b5050505b505050565b8181036109cc575050565b6109d682546107ec565b67ffffffffffffffff8111156109ee576109ee61095c565b610a02816109fc84546107ec565b84610972565b6000601f821160018114610a365760008315610a1e5750848201545b600019600385901b1c1916600184901b178455610a9b565b600085815260209020601f19841690600086815260209020845b83811015610a705782860154825560019586019590910190602001610a50565b5085831015610a8e5781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b600060018201610ab457610ab461091a565b5060010190565b634e487b7160e01b600052603160045260246000fd5b815167ffffffffffffffff811115610aeb57610aeb61095c565b610af9816109fc84546107ec565b602080601f831160018114610b2e5760008415610b165750858301515b600019600386901b1c1916600185901b1785556109b8565b600085815260208120601f198616915b82811015610b5d57888601518255948401946001909101908401610b3e565b5085821015610b7b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b848152608060208201526000610ba46080830186610674565b9315156040830152506001600160a01b03919091166060909101529291505056fea2646970667358221220de9d8eabcdc18149e6d254a3047a18d9635e78ec006c481d4c8d8f2aeda5c09664736f6c63430008120033";

type TodosConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodosConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Todos__factory extends ContractFactory {
  constructor(...args: TodosConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Todos & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Todos__factory {
    return super.connect(runner) as Todos__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodosInterface {
    return new Interface(_abi) as TodosInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Todos {
    return new Contract(address, _abi, runner) as unknown as Todos;
  }
}
