/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Todos, TodosInterface } from "../Todos";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "task",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "TaskCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "TaskDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "task",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "TaskToggleCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "task",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "TaskUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_task",
        type: "string",
      },
    ],
    name: "addTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deleteTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getTask",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "task",
            type: "string",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct Todos.Task",
        name: "task",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTasks",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "task",
            type: "string",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct Todos.Task[]",
        name: "result",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "toggleCompleted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_task",
        type: "string",
      },
    ],
    name: "updateTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f47806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806304a87e38146100675780631d65e77e14610085578063455f5024146100a5578063560f3192146100ba57806367238562146100cd57806386533f6c146100e0575b600080fd5b61006f6100f3565b60405161007c9190610909565b60405180910390f35b61009861009336600461096b565b610225565b60405161007c9190610984565b6100b86100b336600461096b565b6103d4565b005b6100b86100c836600461096b565b61048a565b6100b86100db3660046109e7565b61061c565b6100b86100ee366004610a29565b61076d565b33600090815260208181526040808320805482518185028101850190935280835260609492939192909184015b8282101561021c57838290600052602060002090600302016040518060800160405290816000820154815260200160018201805461015d90610a75565b80601f016020809104026020016040519081016040528092919081815260200182805461018990610a75565b80156101d65780601f106101ab576101008083540402835291602001916101d6565b820191906000526020600020905b8154815290600101906020018083116101b957829003601f168201915b50505091835250506002919091015460ff811615156020808401919091526101009091046001600160a01b03166040909201919091529082526001929092019101610120565b50505050905090565b61025b6040518060800160405280600081526020016060815260200160001515815260200160006001600160a01b031681525090565b3360008181526020818152604080832080548251818502810185019093528083529192909190849084015b828210156103825783829060005260206000209060030201604051806080016040529081600082015481526020016001820180546102c390610a75565b80601f01602080910402602001604051908101604052809291908181526020018280546102ef90610a75565b801561033c5780601f106103115761010080835404028352916020019161033c565b820191906000526020600020905b81548152906001019060200180831161031f57829003601f168201915b50505091835250506002919091015460ff811615156020808401919091526101009091046001600160a01b03166040909201919091529082526001929092019101610286565b505050509050805184106103b15760405162461bcd60e51b81526004016103a890610aaf565b60405180910390fd5b8084815181106103c3576103c3610adb565b602002602001015192505050919050565b336000818152602081905260409020805483106104035760405162461bcd60e51b81526004016103a890610aaf565b600081848154811061041757610417610adb565b6000918252602090912060039091020160028101805460ff8082161560ff19909216821790925582546040519394507f9f2107acfa26983c806661b20b32ff10d456649f2c9a042efe5f4b57bdc4cb959361047c939192600187019216908890610af1565b60405180910390a150505050565b336000818152602081905260409020805483106104b95760405162461bcd60e51b81526004016103a890610aaf565b825b81546104c990600190610bb9565b81101561059957816104dc826001610bd2565b815481106104ec576104ec610adb565b906000526020600020906003020182828154811061050c5761050c610adb565b60009182526020909120825460039092020190815560018082019061053390840182610c5f565b506002918201805491909201805460ff909216151560ff1983168117825592546001600160a01b03610100918290041602610100600160a81b03199093166001600160a81b0319909216919091179190911790558061059181610d3a565b9150506104bb565b50808054806105aa576105aa610d53565b600082815260208120600360001990930192830201818155906105d06001830182610824565b5060020180546001600160a81b031916905590556040518381527fd078b251d950cc55c44340be1db732337ef4939a76e1367ee271ad2cb19c46af9060200160405180910390a1505050565b600033905060006040518060800160405280600154815260200185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050506020808301829052336040938401526001600160a01b038616825281815291812080546001818101835591835291839020845160039093020191825591830151929350839290918201906106c29082610d69565b50604082810151600290920180546060909401516001600160a01b031661010002610100600160a81b0319931515939093166001600160a81b0319909416939093179190911790915560015460208301518383015192517fa31a815e4d8d7c7af5700d02c3c156b3a6682908db1a38865de7b8a0c6f12a84936107489392918790610e1d565b60405180910390a160018060008282546107629190610bd2565b909155505050505050565b3360008181526020819052604090208054851061079c5760405162461bcd60e51b81526004016103a890610aaf565b60008186815481106107b0576107b0610adb565b600091825260209091206003909102019050600181016107d1858783610e57565b50805460028201546040517f662c0129ab027c113a0617e4c5c19e9d2cd670fb50c840786bea97c854b60c2d92610814929091600186019160ff16908890610af1565b60405180910390a1505050505050565b50805461083090610a75565b6000825580601f10610840575050565b601f01602090049060005260206000209081019061085e9190610861565b50565b5b808211156108765760008155600101610862565b5090565b6000815180845260005b818110156108a057602081850181015186830182015201610884565b506000602082860101526020601f19601f83011685010191505092915050565b8051825260006020820151608060208501526108df608085018261087a565b6040848101511515908601526060938401516001600160a01b031693909401929092525090919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561095e57603f1988860301845261094c8583516108c0565b94509285019290850190600101610930565b5092979650505050505050565b60006020828403121561097d57600080fd5b5035919050565b60208152600061099760208301846108c0565b9392505050565b60008083601f8401126109b057600080fd5b50813567ffffffffffffffff8111156109c857600080fd5b6020830191508360208285010111156109e057600080fd5b9250929050565b600080602083850312156109fa57600080fd5b823567ffffffffffffffff811115610a1157600080fd5b610a1d8582860161099e565b90969095509350505050565b600080600060408486031215610a3e57600080fd5b83359250602084013567ffffffffffffffff811115610a5c57600080fd5b610a688682870161099e565b9497909650939450505050565b600181811c90821680610a8957607f821691505b602082108103610aa957634e487b7160e01b600052602260045260246000fd5b50919050565b602080825260129082015271125b99195e081bdd5d081bd988189bdd5b9960721b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b8481526000602060808184015260008654610b0b81610a75565b80608087015260a0600180841660008114610b2d5760018114610b4757610b75565b60ff1985168984015283151560051b890183019550610b75565b8b6000528660002060005b85811015610b6d5781548b8201860152908301908801610b52565b8a0184019650505b505050508615156040860152509150610b8b9050565b6001600160a01b038316606083015295945050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610bcc57610bcc610ba3565b92915050565b80820180821115610bcc57610bcc610ba3565b634e487b7160e01b600052604160045260246000fd5b601f821115610c4557600081815260208120601f850160051c81016020861015610c225750805b601f850160051c820191505b81811015610c4157828155600101610c2e565b5050505b505050565b600019600383901b1c191660019190911b1790565b818103610c6a575050565b610c748254610a75565b67ffffffffffffffff811115610c8c57610c8c610be5565b610ca081610c9a8454610a75565b84610bfb565b6000601f821160018114610cce5760008315610cbc5750848201545b610cc68482610c4a565b855550610d33565b600085815260209020601f19841690600086815260209020845b83811015610d085782860154825560019586019590910190602001610ce8565b5085831015610d265781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b600060018201610d4c57610d4c610ba3565b5060010190565b634e487b7160e01b600052603160045260246000fd5b815167ffffffffffffffff811115610d8357610d83610be5565b610d9181610c9a8454610a75565b602080601f831160018114610dc05760008415610dae5750858301515b610db88582610c4a565b865550610c41565b600085815260208120601f198616915b82811015610def57888601518255948401946001909101908401610dd0565b5085821015610e0d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b848152608060208201526000610e36608083018661087a565b9315156040830152506001600160a01b039190911660609091015292915050565b67ffffffffffffffff831115610e6f57610e6f610be5565b610e8383610e7d8354610a75565b83610bfb565b6000601f841160018114610eb15760008515610e9f5750838201355b610ea98682610c4a565b845550610d33565b600083815260209020601f19861690835b82811015610ee25786850135825560209485019460019092019101610ec2565b5086821015610eff5760001960f88860031b161c19848701351681555b505060018560011b018355505050505056fea2646970667358221220e346e46793514eefb7e7fb4d12fca602103523e0c03b7beef21926cab60f221864736f6c63430008120033";

type TodosConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodosConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Todos__factory extends ContractFactory {
  constructor(...args: TodosConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Todos & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Todos__factory {
    return super.connect(runner) as Todos__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodosInterface {
    return new Interface(_abi) as TodosInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Todos {
    return new Contract(address, _abi, runner) as unknown as Todos;
  }
}
